package com.scrat.everchanging;

import android.content.Context;

import com.scrat.everchanging.util.ReusableIterator;

import java.util.ArrayList;

final class Fairy extends TextureObject {

    interface CreatorCallback {
        void callingCreatorCallback(float[] transform, float[] translate, int xscale, int index);
    }

    private static final int[][] textureList = {{R.drawable.image_15}};

    private final ArrayList<Creator> creatorObjects = new ArrayList<>();
    private final ArrayList<Creator> removeCreatorObjects = new ArrayList<>();

    private final int[][] periodAnim = {
            {60, 115},
            {25, 130},
            {155, 200},
            {20, 65}
    };

    // @formatter:off
    private final float[][][][] matrixTransform = {
            {       //Index 1
                    {   //Frame 1
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -47.250000f,  18.400000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -48.075001f,  17.775000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -48.900002f,  17.150000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -46.825001f,  16.900000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -44.750000f,  16.650000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -45.775002f,  17.025000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -46.799999f,  17.400000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -46.574997f,  16.600000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -46.349998f,  15.800000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -47.625000f,  15.550000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -48.900002f,  15.300000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -48.075001f,  15.425000f},
                            {  0.250000f,   0.250000f,   0.000000f,   0.000000f, -47.250000f,  15.550000f},
                    },
                    {//Frame 2
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -28.200001f,  14.700000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -24.049999f,  16.275000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -19.900000f,  17.850000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -14.875000f,  16.650000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f,  -9.850000f,  15.450000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -11.375000f,  16.225000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -12.900000f,  17.000000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -14.250000f,  14.900000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -15.600000f,  12.800000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -17.075001f,  15.700001f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -18.549999f,  18.600000f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -21.775000f,  16.700001f},
                            {  0.388900f,   0.388900f,   0.000000f,   0.000000f, -25.000000f,  14.800000f},
                    },
                    {//Frame 3
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f, -13.400000f,  13.100000f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f, -11.100000f,  16.325001f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f,  -8.800000f,  19.549999f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f,  -0.600000f,  17.150000f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f,   7.600000f,  14.750000f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f,   5.800000f,  15.900000f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f,   4.000000f,  17.049999f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f,   0.400000f,  13.525000f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f,  -3.200000f,  10.000000f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f,  -4.325000f,  17.424999f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f,  -5.450000f,  24.850000f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f, -14.925000f,  20.075001f},
                            {  0.472200f,   0.472200f,   0.000000f,   0.000000f, -24.400000f,  15.300000f},
                    },
                    {//Frame 4
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f, -11.400000f,  12.000000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  -8.375000f,  16.100000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  -5.350000f,  20.200001f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   3.975000f,  17.350000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  13.300000f,  14.500000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   9.550000f,  15.925000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   5.800000f,  17.350000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   3.250000f,  13.175000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   0.700000f,   9.000000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  -0.325000f,  18.075001f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  -1.350000f,  27.150000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f, -20.100000f,  21.825001f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f, -38.849998f,  16.500000f},
                    },
                    {
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f, -11.400000f,  12.000000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  -8.375000f,  16.100000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  -5.350000f,  20.200001f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   3.975000f,  17.350000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  13.300000f,  14.500000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   9.550000f,  15.925000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   5.800000f,  17.350000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   3.250000f,  13.175000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,   0.700000f,   9.000000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  -0.325000f,  18.075001f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f,  -1.350000f,  27.150000f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f, -20.100000f,  21.825001f},
                            {  0.500000f,   0.500000f,   0.000000f,   0.000000f, -38.849998f,  16.500000f},
                    }
            },
            {     //index 2
                    {
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  47.400002f,   1.500000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  48.300003f,   2.025000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  49.200001f,   2.550000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  48.625000f,   0.525000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  48.049999f,  -1.500000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  48.099998f,  -0.400000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  48.150002f,   0.700000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  48.825001f,   0.175000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  49.500000f,  -0.350000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  50.224998f,   0.725000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  50.950001f,   1.800000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  50.500000f,   1.075000f},
                            { -0.098460f,   0.098480f,  -0.229500f,  -0.229500f,  50.049999f,   0.350000f},
                    },
                    {
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  43.349998f, -17.450001f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  40.275002f, -20.650002f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  37.200001f, -23.850000f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  36.300003f, -28.900002f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  35.400002f, -33.950001f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  35.325001f, -32.250000f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  35.250000f, -30.549999f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  37.674999f, -30.150000f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  40.099998f, -29.750000f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  38.025002f, -27.299999f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  35.950001f, -24.850000f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  38.950001f, -22.600000f},
                            { -0.153200f,   0.153200f,  -0.357000f,  -0.357000f,  41.950001f, -20.350000f},
                    },
                    {
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  39.000000f, -31.700001f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  35.125000f, -32.550003f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  31.250000f, -33.400002f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  30.225000f, -41.825001f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  29.200001f, -50.250000f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  28.875000f, -48.150002f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  28.549999f, -46.049999f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  33.199997f, -44.174999f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  37.849998f, -42.299999f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  31.474998f, -38.324997f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  25.100000f, -34.349998f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  33.200001f, -27.525000f},
                            { -0.186000f,   0.186000f,  -0.433500f,  -0.433500f,  41.299999f, -20.700001f},
                    },
                    {
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  39.200001f, -33.950001f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  34.250000f, -35.125000f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  29.299999f, -36.299999f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  28.224998f, -45.949997f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  27.150000f, -55.599998f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  27.325001f, -51.599998f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  27.500000f, -47.599998f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  32.349998f, -46.900002f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  37.200001f, -46.200001f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  29.275002f, -41.724998f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  21.350000f, -37.250000f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  33.625000f, -22.100000f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  45.900002f,  -6.950000f},
                    },
                    {
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  39.200001f, -33.950001f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  34.250000f, -35.125000f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  29.299999f, -36.299999f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  28.224998f, -45.949997f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  27.150000f, -55.599998f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  27.325001f, -51.599998f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  27.500000f, -47.599998f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  32.349998f, -46.900002f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  37.200001f, -46.200001f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  29.275002f, -41.724998f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  21.350000f, -37.250000f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  33.625000f, -22.100000f},
                            { -0.196900f,   0.196900f,  -0.459000f,  -0.459000f,  45.900002f,  -6.950000f},
                    }
            },
            {
                    {
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -49.700001f, -88.250000f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -48.675003f, -88.525002f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -47.650002f, -88.800003f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -48.750000f, -87.000000f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -49.849998f, -85.199997f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -49.525002f, -86.250000f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -49.200001f, -87.300003f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -48.700001f, -86.625000f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -48.200001f, -85.949997f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -47.200001f, -86.774994f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -46.200001f, -87.599998f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -46.825001f, -87.050003f},
                            { -0.154500f,  -0.154500f,   0.196200f,  -0.196200f, -47.450001f, -86.500000f},
                    },
                    {
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -58.549999f, -71.050003f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -62.400002f, -68.750000f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -66.250000f, -66.449997f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -68.375000f, -61.774998f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -70.500000f, -57.099998f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -70.150002f, -58.799999f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -69.800003f, -60.500000f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -67.350006f, -60.224998f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -64.900002f, -59.950001f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -66.250000f, -62.900002f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -67.599998f, -65.849998f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -64.125000f, -67.199997f},
                            { -0.240300f,  -0.240300f,   0.305200f,  -0.305200f, -60.650002f, -68.550003f},
                    },
                    {
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -66.500000f, -58.400002f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -70.425003f, -58.599998f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -74.349998f, -58.799999f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -77.524994f, -50.900002f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -80.699997f, -43.000000f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -80.474998f, -45.075001f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -80.250000f, -47.150002f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -75.275002f, -47.825001f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -70.300003f, -48.500000f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -75.425003f, -54.000000f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -80.550003f, -59.500000f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -70.949997f, -63.950001f},
                            { -0.291900f,  -0.291900f,   0.370600f,  -0.370600f, -61.349998f, -68.400002f},
                    },
                    {
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -66.750000f, -56.150002f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -71.849998f, -56.300003f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -76.949997f, -56.450001f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -80.474998f, -47.400002f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -84.000000f, -38.349998f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -82.800003f, -42.150002f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -81.599998f, -45.950001f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -76.774994f, -45.349998f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -71.949997f, -44.750000f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -78.399994f, -51.174999f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -84.849998f, -57.599998f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -69.099998f, -69.024994f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -53.349998f, -80.449997f},
                    },
                    {
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -66.750000f, -56.150002f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -71.849998f, -56.300003f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -76.949997f, -56.450001f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -80.474998f, -47.400002f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -84.000000f, -38.349998f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -82.800003f, -42.150002f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -81.599998f, -45.950001f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -76.774994f, -45.349998f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -71.949997f, -44.750000f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -78.399994f, -51.174999f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -84.849998f, -57.599998f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -69.099998f, -69.024994f},
                            { -0.309000f,  -0.309000f,   0.392300f,  -0.392400f, -53.349998f, -80.449997f},
                    }
            },
            {
                    {
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -75.199997f, -35.450001f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -74.550003f, -36.275002f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -73.900002f, -37.099998f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -73.699997f, -35.000000f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -73.500000f, -32.900002f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -73.849998f, -33.950001f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -74.199997f, -35.000000f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -73.425003f, -34.750000f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -72.650002f, -34.500000f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -72.350006f, -35.775002f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -72.050003f, -37.049999f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -72.199997f, -36.224998f},
                            { -0.005280f,  -0.005280f,   0.249600f,  -0.249600f, -72.349998f, -35.400002f},
                    },
                    {
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -71.900002f, -16.450001f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.550003f, -12.325001f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -75.199997f,  -8.200000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -74.099998f,  -3.175000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.000000f,   1.850000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.750000f,   0.300000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -74.500000f,  -1.250000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -72.375000f,  -2.500000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -70.250000f,  -3.750000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.074997f,  -5.275000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -75.900002f,  -6.800000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.975006f, -10.000000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -72.050003f, -13.200000f},
                    },
                    {
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -71.900002f, -16.450001f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.550003f, -12.325001f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -75.199997f,  -8.200000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -74.099998f,  -3.175000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.000000f,   1.850000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.750000f,   0.300000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -74.500000f,  -1.250000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -72.375000f,  -2.500000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -70.250000f,  -3.750000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.074997f,  -5.275000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -75.900002f,  -6.800000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -73.975006f, -10.000000f},
                            { -0.008224f,  -0.008224f,   0.388200f,  -0.388200f, -72.050003f, -13.200000f},
                    },
                    {
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -69.550003f,   0.450000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -73.699997f,   3.375000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -77.849998f,   6.300000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -75.199997f,  15.650001f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -72.550003f,  25.000000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -73.900002f,  21.250000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -75.250000f,  17.500000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -71.025002f,  15.025000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -66.800003f,  12.550000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -75.800003f,  11.350000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -84.800003f,  10.150000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -79.125000f,  -8.449999f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -73.449997f, -27.049999f},
                    },
                    {
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -69.550003f,   0.450000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -73.699997f,   3.375000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -77.849998f,   6.300000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -75.199997f,  15.650001f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -72.550003f,  25.000000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -73.900002f,  21.250000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -75.250000f,  17.500000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -71.025002f,  15.025000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -66.800003f,  12.550000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -75.800003f,  11.350000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -84.800003f,  10.150000f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -79.125000f,  -8.449999f},
                            { -0.010570f,  -0.010570f,   0.499100f,  -0.499100f, -73.449997f, -27.049999f},
                    }
            }
    };

    private final float[][][][][] ColorTransform = {
            { //Index 1
                    { //Frame 1
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    { //Frame 2
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    { //Frame 3
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    { //Frame 4
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    }
            },
            {     //index 2
                    {
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256, 171}, {0, 0, 0, 0}}, {{256, 256, 256, 214}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256,  85}, {0, 0, 0, 0}}, {{256, 256, 256, 106}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256,  85}, {0, 0, 0, 0}}, {{256, 256, 256, 106}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    }
            },
            {
                    {
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256, 171}, {0, 0, 0, 0}}, {{256, 256, 256, 214}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256,  85}, {0, 0, 0, 0}}, {{256, 256, 256, 106}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256,  85}, {0, 0, 0, 0}}, {{256, 256, 256, 106}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    }
            },
            {
                    {
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256, 171}, {0, 0, 0, 0}}, {{256, 256, 256, 214}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 256}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256,  85}, {0, 0, 0, 0}}, {{256, 256, 256, 106}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    },
                    {
                            {{256, 256, 256,  85}, {0, 0, 0, 0}}, {{256, 256, 256, 106}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 128}, {0, 0, 0, 0}},
                            {{256, 256, 256, 128}, {0, 0, 0, 0}}, {{256, 256, 256, 192}, {0, 0, 0, 0}},
                            {{256, 256, 256, 256}, {0, 0, 0, 0}},
                    }
            }
    };
    // @formatter:on

    private static final int MAX_FRAMES = 40;

    private boolean init;
    private int frameCounter;
    private int numClips = minObjects;

    private CreatorCallback creatorCallback;

    public void registerCallBack(final CreatorCallback callback) {
        this.creatorCallback = callback;
    }

    Fairy(Context context) {
        super(context, textureList, null);
    }

    private void addCreator() {
        if (creatorObjects.size() >= numClips) return;
        if (random.nextInt(5) > 0) return;

        final Creator creator = new Creator();
        creator.animIndex = random.nextInt(4);
        creator.frame = periodAnim[creator.animIndex][0];
        creator.maxFrame = periodAnim[creator.animIndex][1];
        creatorObjects.add(creator);
    }

    private void createObject(final int index) {
        final TextureManager.Texture texture = textureManager.getTexture(textureManager.getTextureIndex(textureList[0][0]));
        texture.width = 20.0f;
        texture.height = 21.0f;

        final int _x = random.nextInt(120) + 70;
        final int _y = random.nextInt(160) + 70;
        for (int i = 0; i < 13; i++) {
            final Object object = objects.obtain(texture, 1.0f);
            object.resetMatrix();
            object.resetViewMatrix();
            object.setViewTranslate(_x, height - _y);
            object.index = index;
            object.frameCounter = 0;
            object.animCounter = i;
            object.animCounterSkip = false;
        }
    }

    private void updateCreator() {
        final int objectsSize = creatorObjects.size();
        for (int i = 0; i < objectsSize; i++) {
            final Creator creator = creatorObjects.get(i);
            if (creator.frame == 0) createObject(creator.animIndex);
            if (creator.maxFrame == 0) removeCreatorObjects.add(creator);
            creator.frame--;
            creator.maxFrame--;
        }

        final int removeCreatorObjectsSize = removeCreatorObjects.size();
        for (int i = 0; i < removeCreatorObjectsSize; i++) {
            creatorObjects.remove(removeCreatorObjects.get(i));
        }
        removeCreatorObjects.clear();
    }

    public void update(boolean createObject) {
        frameCounter = (frameCounter + 1) % MAX_FRAMES;
        if (!init && createObject) numClips = minObjects + random.nextInt(maxObjects - 4);
        init = createObject;
        if (createObject && (frameCounter == 4)) addCreator();

        updateCreator();

        final ReusableIterator<Object> iterator = objects.iterator();
        iterator.acquire();

        while (iterator.hasNext()) {
            final Object object = iterator.next();
            if (object.frameCounter < matrixTransform[object.index].length) {
                object.resetMatrix();
                object.setTransform(matrixTransform[object.index][object.frameCounter][object.animCounter]);
                object.setColorTransform(ColorTransform[object.index][object.frameCounter][object.animCounter]);
                if (object.animCounter == 12) {
                    if ((object.index == 0 && object.frameCounter == 4) ||
                            (object.index == 1 && object.frameCounter == 1) ||
                            (object.index == 2 && object.frameCounter == 0) ||
                            (object.index == 3 && object.frameCounter == 1)) {
                        creatorCallback.callingCreatorCallback(object.viewTransformMatrix, object.ViewTranslate, random.nextInt(2), object.index);
                    }
                }

                // Naming is confusing, reused variable. animCounterSkip actually skips
                // frameCounter, not animCounter.

                // If new frames will be added to compensate for frame rate increase from 20 to 40,
                // this needs to be removed.
                if (!object.animCounterSkip) {
                    object.frameCounter++;
                }
                object.animCounterSkip = !object.animCounterSkip;
            } else iterator.remove();
        }

        iterator.release();
    }

    private static class Creator {
        public int animIndex, frame, maxFrame;
    }
}
